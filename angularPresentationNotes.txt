Expression (double braces or inside a directive, resolves an expression and returns its value where the expression is written, etc)
Module (basic container for controllers, defines an application's scope)
Directive (let you extend HTML, for example ng-model and ng-repeat)
Controller (control data, use $scope.data to save data/functions)
Stick a controller in its own file, import that in the HTML via script tags
Filters (transform data for you)
Services (small bit of reusable code that does something for you)
Possible organization:
Simple (Sort by type of file, good when only a few files)--
  app/
  ----- controllers/
  ---------- mainController.js
  ---------- otherController.js
  ----- directives/
  ---------- mainDirective.js
  ---------- otherDirective.js
  ----- services/
  ---------- userService.js
  ---------- itemService.js
  ----- js/
  ---------- bootstrap.js
  ---------- jquery.js
  ----- app.js
  views/
  ----- mainView.html
  ----- otherView.html
  ----- index.html

Complex (Sort by function, good when you have many files)--
  app/
  ----- shared/   // acts as reusable components or partials of our site
  ---------- sidebar/
  --------------- sidebarDirective.js
  --------------- sidebarView.html
  ---------- article/
  --------------- articleDirective.js
  --------------- articleView.html
  ----- components/   // each component is treated as a mini Angular app
  ---------- home/
  --------------- homeController.js
  --------------- homeService.js
  --------------- homeView.html
  ---------- blog/
  --------------- blogController.js
  --------------- blogService.js
  --------------- blogView.html
  ----- app.module.js
  ----- app.routes.js
  assets/
  ----- img/  // Images and icons for your app
  ----- css/  // All styles and style related files (SCSS or LESS files)
  ----- js/   // JavaScript files written for your app that are not for angular
  ----- libs/ // Third-party libraries such as jQuery, Moment, Underscore, etc.
  index.html
